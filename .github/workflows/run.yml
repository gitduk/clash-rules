name: Generate RULE-SET for Subconverter External Config
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "custom_tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "custom_private=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "felixonmars_apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "felixonmars_google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "cn_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> $GITHUB_ENV
          echo "lan_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the "hidden" branch
        uses: actions/checkout@v3
        with:
          ref: hidden

      - name: Generate icloud.txt file
        run: |
          echo "# 内容: iCloud 域名列表" > icloud.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> icloud.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> icloud.txt
          curl -sSL ${custom_icloud} | grep -E "^(full|domain):" | awk -F ':' '{printf "DOMAIN-SUFFIX,%s\n", $2}' >> icloud.txt
          echo ${{ secrets.TOKEN }}

      - name: Generate google.txt file
        run: |
          echo "# 内容: Google 在中国大陆可直连的域名列表" > google.txt
          echo "# 来源: https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> google.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> google.txt
          curl -sSL ${felixonmars_google} | perl -ne '/^server=\/([^\/]+)\// && print "DOMAIN-SUFFIX,$1\n"' >> google.txt

      - name: Generate apple.txt file
        run: |
          echo "# 内容: Apple 在中国大陆可直连的域名列表" > apple.txt
          echo "# 来源: https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> apple.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> apple.txt
          curl -sSL ${felixonmars_apple} | perl -ne '/^server=\/([^\/]+)\// && print "DOMAIN-SUFFIX,$1\n"' >> apple.txt

      - name: Generate private.txt file
        run: |
          echo "# 内容: Google 在中国大陆可直连的域名列表" > private.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> private.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> private.txt
          curl -sSL ${custom_private} | awk -F ':' '/^full:/ {printf "DOMAIN,%s\n", $2}' >> private.txt
          curl -sSL ${custom_private} | awk -F ':' '/^domain:/ {printf "DOMAIN-SUFFIX,%s\n", $2}' >> private.txt

      - name: Generate direct.txt file
        run: |
          echo "# 内容: 直连域名列表" > direct.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> direct.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> direct.txt
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN,$2\n"' >> direct.txt
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX,$2\n"' >> direct.txt

      - name: Generate proxy.txt file
        run: |
          echo "# 内容: 代理域名列表" > proxy.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> proxy.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> proxy.txt
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN,$2\n"' >> proxy.txt
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX,$2\n"' >> proxy.txt

      - name: Generate reject.txt file
        run: |
          echo "# 内容: 广告域名列表" > reject.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> reject.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> reject.txt
          curl -sSL ${Loyalsoldier_reject} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX,$2\n"' >> reject.txt

      - name: Generate gfw.txt file
        run: |
          echo "# 内容: GFWList 域名列表" > gfw.txt 
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> gfw.txt 
          echo "# 时间: $(date +%Y%m%d%H%M)" >> gfw.txt 
          curl -sSL ${Loyalsoldier_gfw} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX,$2\n"' >> gfw.txt

      - name: Generate tld-not-cn.txt file
        run: |
          echo "# 内容: 非中国大陆使用的顶级域名列表" > tld-not-cn.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> tld-not-cn.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> tld-not-cn.txt
          curl -sSL "${custom_tld_not_cn}" | perl -ne '/^domain:([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "DOMAIN-SUFFIX,$1\n"' >> tld-not-cn.txt

      - name: Generate cncidr.txt file
        run: |
          echo "# 内容: 中国大陆 IP 地址列表" > cncidr.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> cncidr.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> cncidr.txt
          curl -sSL ${cn_cidr} | perl -ne '/(.+\/\d+)/ && print "IP-CIDR,$1,no-resolve\n"' >> cncidr.txt

      - name: Generate telegramcidr.txt file
        run: |
          echo "# 内容: Telegram 使用的 IP 地址列表" > telegramcidr.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> telegramcidr.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> telegramcidr.txt
          curl -sSL ${telegram_cidr} | perl -ne '/(.+\/\d+)/ && print "IP-CIDR,$1,no-resolve\n"' >> telegramcidr.txt

      - name: Generate lancidr.txt file
        run: |
          echo "# 内容: 局域网 IP 及保留 IP 地址列表" > lancidr.txt
          echo "# 来源: https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> lancidr.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> lancidr.txt
          curl -sSL ${lan_cidr} | perl -ne '/(.+\/\d+)/ && print "IP-CIDR,$1,no-resolve\n"' >> lancidr.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
