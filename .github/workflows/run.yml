name: Generate RULE-SET for Subconverter External Config
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "private=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> $GITHUB_ENV
          echo "reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "cn_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> $GITHUB_ENV
          echo "lan_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> $GITHUB_ENV
          echo "chat=https://raw.githubusercontent.com/gitduk/clash-rules/main/custom/chat.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the "hidden" branch
        uses: actions/checkout@v3
        with:
          ref: hidden

      - name: Generate txt file
        run: |
          generate_file () {
            url=$1
            file_name=$2
            comment=$3
            curl_command=$4
            echo "# 内容: ${comment}\n# 来源: ${url}\n# 时间: $(date +%Y%m%d%H%M)" > ${file_name}
            eval "curl -sSL ${url} | $curl_command >> ${file_name}"
          }
          
          generate_file ${icloud} icloud.txt "iCloud 域名列表" \
            'grep -E "^(full|domain):" | awk -F ":" "{printf "DOMAIN-SUFFIX,%s\\n", \$2}"'
 
      - name: Generate proxy-uniq.txt file
        run: |
          echo "# 内容: 去重后的代理规则集合" > proxy-uniq.txt
          echo "# 来源: ${Loyalsoldier_proxy}" >> proxy-uniq.txt
          echo "# 来源: ${Loyalsoldier_gfw}" >> proxy-uniq.txt
          echo "# 来源: ${telegram_cidr}" >> proxy-uniq.txt
          echo "# 来源: ${custom_tld_not_cn}" >> proxy-uniq.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> proxy-uniq.txt
          cat proxy.txt gfw.txt telegram.txt tld-not-cn.txt | grep -Ev "^#" | sort | uniq >> proxy-uniq.txt

      - name: Generate direct-uniq.txt file
        run: |
          echo "# 内容: 去重后的直连规则集合" > direct-uniq.txt
          echo "# 来源: ${Loyalsoldier_direct}" >> direct-uniq.txt
          echo "# 来源: ${lan_cidr}" >> direct-uniq.txt
          echo "# 来源: ${cn_cidr}" >> direct-uniq.txt
          echo "# 来源: ${custom_private}" >> direct-uniq.txt
          echo "# 来源: ${felixonmars_apple}" >> direct-uniq.txt
          echo "# 来源: ${felixonmars_google}" >> direct-uniq.txt
          echo "# 来源: ${custom_icloud}" >> direct-uniq.txt
          echo "# 时间: $(date +%Y%m%d%H%M)" >> direct-uniq.txt
          cat direct.txt lancidr.txt cncidr.txt private.txt apple.txt google.txt icloud.txt | grep -Ev "^#" | sort | uniq >> direct-uniq.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
