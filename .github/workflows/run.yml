name: Generate RULE-SET for Subconverter External Config
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          # Loyalsoldier
          echo "icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "cn_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> $GITHUB_ENV
          echo "lan_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> $GITHUB_ENV
          # felixonmars
          echo "apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          # gitduk
          echo "chat=https://raw.githubusercontent.com/gitduk/clash-rules/main/custom/chat.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the "hidden" branch
        uses: actions/checkout@v3
        with:
          ref: hidden

      - name: Generate txt file
        run: |
          generate_file () {
            echo "# ${1}"
            eval "curl -sSL ${2} | $3"
          }

          # icloud
          generate_file "iCloud 域名列表" ${icloud} \
            "grep -E '^full:' | awk -F ':' '{printf \"DOMAIN,%s\\n\", \$2}'" > icloud.txt
          generate_file "" ${icloud} \
            "grep -E '^domain:' | awk -F ':' '{printf \"DOMAIN-SUFFIX,%s\\n\", \$2}'" >> icloud.txt

          # reject
          generate_file "广告域名列表" ${reject} \
            "sed 's/^/DOMAIN-SUFFIX,/'" > reject.txt

          # proxy
          generate_file "代理域名列表" ${proxy} \
            "grep -E '^full:' | sed 's/^full:/DOMAIN,/'" > proxy.txt
          generate_file "" ${proxy} \
            "grep -Ev '^(full|regexp):' | sed 's/^/DOMAIN-SUFFIX,/'" >> proxy.txt

          # direct
          generate_file "直连域名列表" ${direct} \
            "grep -E '^full:' | sed 's/^full:/DOMAIN,/'" > direct.txt
          generate_file "" ${direct} \
            "grep -Ev '^(full|regexp):' | sed 's/^/DOMAIN-SUFFIX,/'" >> direct.txt

          # gfw
          generate_file "gfw 域名列表" ${gfw} \
            "sed 's/^/DOMAIN-SUFFIX,/'" > gfw.txt

          # cn_cidr
          generate_file "中国大陆 IP 地址列表" ${cn_cidr} \
            "grep -v ':' | sed 's|\(.*\)/\([0-9]\{1,2\}\)$|IP-CIDR,\1,no-resolve|' > cn_cidr.txt
          generate_file "" ${cn_cidr} \
            "grep '::' | awk -F '::' '{printf "IP-CIDR,%s,no-resolve\n",\$1}' >> cn_cidr.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
